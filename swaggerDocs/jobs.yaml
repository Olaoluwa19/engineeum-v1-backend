
openapi: 3.0.0
info:
  title: Job API
  description: API for managing jobs
  version: 1.0.0
servers:
- url: /api/jobs
paths:
  /jobs:
    get:
      summary: Get jobs
      description: Retrieve a list of jobs
      parameters:
      - in: query
        name: status
        schema:
          type: string
        description: Filter by job status
      - in: query
        name: workType
        schema:
          type: string
        description: Filter by work type
      - in: query
        name: search
        schema:
          type: string
        description: Search by company or position
      - in: query
        name: sort
        schema:
          type: string
        description: Sort by latest, oldest, a-z, or z-a
      responses:
        200:
          description: Jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalJobs:
                    type: integer
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  numOfPage:
                    type: integer
        204:
          description: No jobs found
    post:
      summary: Create job
      description: Create a new job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        201:
          description: Job created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        400:
          description: Invalid request
  /jobs/{id}:
    get:
      summary: Get job by ID
      description: Retrieve a job by ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Job ID
      responses:
        200:
          description: Job retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        404:
          description: Job not found
    put:
      summary: Update job
      description: Update an existing job
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Job ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        200:
          description: Job updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        400:
          description: Invalid request
    delete:
      summary: Delete job
      description: Delete a job by ID
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: Job ID
      responses:
        200:
          description: Job deleted successfully
        404:
          description: Job not found
  /user/jobs:
    get:
      summary: Get user jobs
      description: Retrieve a list of jobs created by the user
      parameters:
      - in: query
        name: status
        schema:
          type: string
        description: Filter by job status
      - in: query
        name: workType
        schema:
          type: string
        description: Filter by work type
      - in: query
        name: search
        schema:
          type: string
        description: Search by company or position
      - in: query
        name: sort
        schema:
          type: string
        description: Sort by latest, oldest, a-z, or z-a
      responses:
        200:
          description: Jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totaljobs:
                    type: integer
                  userJobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
        204:
          description: No jobs found
  /user/stats:
    get:
      summary: Get user job stats
      description: Retrieve job statistics for the user
      responses:
        200:
          description: Stats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalJStats:
                    type: integer
                  defaultStats:
                    type: object
                    properties:
                      pending:
                        type: integer
                      reject:
                        type: integer
                      interview:
                        type: integer
