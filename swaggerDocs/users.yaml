components:
  schemas:
    User:
      $ref: "#/components/schemas/User"

paths:
  /users:
    get:
      summary: Get all user in the database
      tags:
      - Users
      responses:
        200:
          description: Display's all user in the database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        204:
          description: No Users found.

    put:
      summary: Update's existing user in the database.
      tags:
      - Users
      requestbody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                No userID:
                  summary: Enter user id.
                  value:
                    error: "User id is required."
                Invalid-userID:
                  summary: Enter a valid user id.
                  value:
                    error: "No user id matches id."
                other errors:
                  summary: Server error or more.
                  value:
                    error: "Error in updating user details"
        403:
          description: You can not change your username.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        500:
          description: something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                Server error:
                  summary: Server error.
                  value:
                    error: "something went wrong."

    delete:
      summary: delete's user from the database
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        description: The autogenerated ID of the user collection
        schema:
          type: string
        example: "ka6838t28yhdhbic"
      responses:
        200:
          description: Delete's user in the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "User deleted successfully"
          examples:
            Success:
              summary: User deleted successfully
              value:
                success: "User deleted successfully"
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          examples:
            No userID:
              summary: Enter user id.
              value:
                error: "User id is required."
            Invalid-userID:
              summary: Enter a valid user id.
              value:
                error: "No user id matches id."
        500:
          description: something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          examples:
            Server error:
              summary: Server error.
              value:
                error: "something went wrong."

  /users/{id}:
    get:
      summary: Get user by ID
      tags:
      - Users
      responses:
        200:
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      parameters:
      - in: path
        name: id
        required: true
        description: The autogenerated ID of the user collection
        schema:
          type: string
        example: "ka6838t28yhdhbic"



